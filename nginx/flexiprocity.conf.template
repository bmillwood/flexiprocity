map $cookie_jwt $authorization {
    "" "";
    default "Bearer $cookie_jwt";
}
# Try to map the http port to the https port, but in production we'll often
# map the port numbers to something else entirely; assume the default port
# in that case.
map $http_host $https_host {
    ~^(.*):57958$ "$1:57959";
    default $http_host;
}
# require that the server is accessed with the correct hostname
server {
    listen 57958 default_server;
    listen [::]:57958 default_server;
    listen 57959 ssl default_server;
    listen [::]:57959 ssl default_server;
    ssl_certificate SSL_DIR/fullchain.pem;
    ssl_certificate_key SSL_DIR/key.pem;
    return 444; # nginx-specific special code to just close the connection
}
server {
    listen 57958;
    listen [::]:57958;
    server_name flexiprocity.rpm.cc local.rpm.cc reciprocity.rpm.cc;
    location / {
        return 308 https://$https_host$request_uri;
    }
}
server {
    listen 57959 ssl;
    listen [::]:57959 ssl;
    server_name flexiprocity.rpm.cc local.rpm.cc reciprocity.rpm.cc;
    ssl_certificate SSL_DIR/fullchain.pem;
    ssl_certificate_key SSL_DIR/key.pem;
    location /auth/ {
        proxy_pass http://127.0.0.1:5001/;
        proxy_set_header X-Forwarded-Host $http_host;
    }
    location /graphql {
        proxy_set_header Authorization "$authorization";
        proxy_pass http://localhost:5000/graphql;
    }
    location /graphiql {
        proxy_pass http://localhost:5000/;
    }
    location /sentry.js {
        return 301 SENTRY_URL;
    }
    location / {
        gzip on;
        gzip_types text/css application/javascript;
        root FRONTEND_DIR;
        try_files $uri /index.html =404;
    }
}